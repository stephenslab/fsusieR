################################## Operations on susif object ############################
#'
#'@title Initialize a susiF object using regression coefficients
#'
#'
#'@param L number of non zero coefficients An L-vector containing the the indices of the
#'   nonzero coefficients.
#'
#' @param G_prior prior object defined by init_prior function
#' @param Y Matrix of outcomes
#' @param X Matrix of covariate
#' @return A list with elements
#' @item fitted_wc2
#' @item fitted_wc2
#' @item alpha_hist
#' @item  ind_fitted_func
#' @item cs (credible set)
#' @item pip Posterior inclusion probabilites
#'


init_susiF_obj <- function(L, G_prior, Y,X ){

  obj <-list()
  fitted_wc       <-  list()
  fitted_wc2      <-  list()
  alpha_hist      <-  list()
  ind_fitted_func <-  list()
  cs              <-  list()
  pip             <-  rep(NA, dim(X)[2])
  est_pi          <-  list()
  est_sd          <-  list()

  for ( l in L )
    {
     fitted_wc[[l]]        <-  matrix(NA, nrow = dim(X)[2], ncol=dim(Y)[2]  )
     fitted_wc2[[l]]       <-  matrix(NA, nrow = dim(X)[2], ncol=dim(Y)[2]  )
    #alpha_hist[[l]]      <-  list()
     ind_fitted_func[[l]] <-  matrix(NA, nrow = dim(Y)[1], ncol=dim(Y)[2]  )
     cs[[l]]              <-  list()
     est_pi [[l]]         <-  get_pi_G_prior(G_prior)
     est_sd [[l]]         <-  get_sd_G_prior(G_prior)
    }
 obj <- list( fitted_wc       = fitted_wc,
              fitted_wc2      =  fitted_wc2,
              alpha_hist      =  alpha_hist,
              ind_fitted_func = ind_fitted_func,
              cs              = cs,
              pip             = pip,
              est_pi          = est_pi,
              est_sd          = est_sd)
 class(obj) <- "susiF"
 return(obj)
}

#'
#'@title Access susif mixture proprotion of effect l
#'
#'@param susiF.obj a susisf object defined by init_susiF_bj function
#'@param l integer larger or equal to 1. Corresponds to the effect to be accessed 
#'
get_pi.susif <- function(susiF.obj, l)
{
  
  if( l > length(susiF.obj$est_pi))
  {
    stop("Error trying to acces mixture proportion")
  }
  if( l < 1)
  {
    stop("Error l should be larger ")
  }
  out <- susiF.obj$est_pi[[l]]
  return(out)
}
