  library(susiF.alpha)
 
library(ashr)
 
#Example using curves simulated under the Mixture normal per scale prior
rsnr <-1 #expected root signal noise ratio
N <- 100    #Number of individuals
P <- 10     #Number of covariates
pos1 <- 1   #Position of the causal covariate for effect 1
pos2 <- 5   #Position of the causal covariate for effect 1
lev_res <- 7#length of the molecular phenotype (2^lev_res)
f1 <-  1*simu_IBSS_per_level(lev_res )$sim_func#first effect
f2 <- 1*simu_IBSS_per_level(lev_res )$sim_func #second effect
 
G = matrix(sample(c(0, 1,2), size=N*P, replace=TRUE), nrow=N, ncol=P) #Genotype
beta0       <- 0
beta1       <- 1
beta2       <- 1
noisy.data  <- list()

for ( i in 1:N)
{
  f1_obs <- f1
  f2_obs <- f2
  noise <- rnorm(length(f1), sd= 2)
  noisy.data [[i]] <-   beta1*G[i,pos1]*f1_obs + beta2*G[i,pos2]*f2_obs + noise
  
}
noisy.data <- do.call(rbind, noisy.data)

 



Y <- noisy.data
X <- G
#Running fSuSiE

out <- susiF(Y,X,L=15  ,maxit=10, prior="mixture_normal")
#the easiest way to vizualize the result is to use the plot_susiF function
 
plot(  out$ELBO )  
plot(  out$ELBO[-c(1)])  

sqrt(out$sigma2)
diff(out$ELBO)
out$cs
out$alpha
out <- susiF(Y,X,L=14  ,maxit=10, init_pi0_w = 1 )
#the easiest way to vizualize the result is to use the plot_susiF function

plot(  out$ELBO )  
plot(  out$ELBO[-c(1)])  

sqrt(out$sigma2)
diff(out$ELBO)
out$cs
out$alpha

out2 <- susiF(Y,X,L=10  )
plot(  out2$ELBO )  
plot(  out2$ELBO[-c(1)])  
out2$alpha 
out$cs

sqrt(out2$sigma2)
diff(out2$ELBO)
