library(susiF.alpha)
library(ashr)

tl <- list()
sd_est <- list()
sd_l<- list()
for (k in  1:10)
{
  #Example using curves simulated under the Mixture normal per scale prior
  rsnr <- 0.1 #expected root signal noise ratio
  N <- 100    #Number of individuals
  P <- 20     #Number of covariates
  pos1 <- 1   #Position of the causal covariate for effect 1
  pos2 <- 5   #Position of the causal covariate for effect 1
  lev_res <- 4#length of the molecular phenotype (2^lev_res)
  f1 <-  simu_IBSS_per_level(lev_res )$sim_func#first effect
  f2 <- simu_IBSS_per_level(lev_res )$sim_func #second effect
  
  
  
  G = matrix(sample(c(0, 1,2), size=N*P, replace=TRUE), nrow=N, ncol=P) #Genotype
  beta0       <- 0
  beta1       <- 1
  beta2       <- 1
  noisy.data  <- list()
  sd_l[[k]]<- runif(1, 2.5,10.005)
  for ( i in 1:N)
  {
    f1_obs <- f1
    f2_obs <- f2
    
   
    noise <- rnorm(length(f1), sd=sd_l[[k]] )
    noisy.data [[i]] <-   beta1*G[i,pos1]*f1_obs + beta2*G[i,pos2]*f2_obs + noise
    
  }
  noisy.data <- do.call(rbind, noisy.data)
  
  
  
  
  
  Y <- noisy.data
  X <- G
  #Running fSuSiE
  
  out <- susiF(Y,X,L=4 , 
               prior = "mixture_normal",
               control_mixsqp =  list(
                 eps = 1e-1,
                 numiter.em = 100,
                 verbose = FALSE
               ),
               maxit=10
  )
  tl[[k]]<-  out$ELBO
  print(out$sigma2)
print(out$ELBO)
    sd_est[[k]] <-sqrt(out$sigma2)
}
for( i in 1:length(tl))
{
  plot(tl[[i]][-c(1:2)]  )
  abline(a=max(tl[[i]] ),b=0)
  
}

plot( unlist(sd_l), unlist(sd_est))
abline(a=0,b=1)
plot(out$ELBO)
diff(out$ELBO)
out$pip
